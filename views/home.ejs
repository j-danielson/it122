<html>
<head>
    <title>Albums</title>
</head>
<body>

<div id="root"></div>

<script src="https://unpkg.com/react@17/umd/react.development.js"></script>
<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>

<!-- Don't use this in production: -->
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

<script type="text/babel">
  const albumsData = <%- JSON.stringify(albums) %>;

  const Albums = (props) => {
    return (
      <div>
        <h2>Albums:</h2>
        <ul>
        {props.albums.map((album, index) => (
          <li key={index} onClick={props.clickHandler}>{album.title}</li>
        ))}
        </ul>
      </div>
    )
  }

  const Details = (props) => {
    return (
      <div>
        <h3>Album Details</h3>
        { props.album && 
          <form>
            <b>Title</b>: <input type="text" name="title" onChange={props.changeHandler} value={props.album.title || ''} />
            <b>artist</b>: <input type="text" name="artist" onChange={props.changeHandler} value={props.album.artist || ''} />
            <b>release</b>: <input type="text" name="release" onChange={props.changeHandler} value={props.album.release || ''} />
            <b>genre</b>: <input type="text" name="genre" onChange={props.changeHandler} value={props.album.genre || ''} />
            <br />
            <button type="button" onClick={props.clearForm}>
            Clear Form
          </button>
          <button type="button" onClick={props.saveItem}>
            Save
          </button>
          <button type="button" onClick={props.deleteItem}>
            Delete
          </button>
          </form>

        }
      </div>
    )
  }

  const App = () => {
    const [albums, setAlbums] = React.useState(albumsData);
    const [selectedAlbum, setSelectedAlbum] = React.useState();

    React.useEffect(() => {
      const fetchData = async () => {
        fetch("/api/albums")
        .then(res => res.json())
        .then((json) => {
          setAlbums(json);
        })
      }
      fetchData()
    }, []);

    const itemClicked = (e) => {
      let found = albumsData.find((album) => {return album.title === e.target.innerText });
      setSelectedAlbum(found);
    }

    const albumChanged = (e) => {
      let field = e.target.name;
      console.log(';field:', field)
      let newAlbum = {...selectedAlbum};
      console.log('newAlbum[field]', newAlbum[field])
      newAlbum[field] = e.target.value;
      setSelectedAlbum(newAlbum);
      const albumIndex = albums.findIndex((album) => album._id === newAlbum._id);
      const updatedAlbums = [...albums];
      updatedAlbums[albumIndex] = newAlbum;
      setAlbums(updatedAlbums);
    }

    const clearForm = () => {
      setSelectedAlbum({});
    }

    const saveItem = () => {
      if (!selectedAlbum.title) {
        return;
      }
      fetch("/api/albums", {
        method: "POST",
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(selectedAlbum)
      })
      .then(res => res.json())
      .then((data) => {
        if (!selectedAlbum._id) {
          selectedAlbum._id = data._id;
          setSelectedAlbum(selectedAlbum);
          let newAlbums = [...albums];
          newAlbums.push(selectedAlbum);
          setAlbums(newAlbums);
        }
      });
    };

    const deleteItem = () => {
  console.log('should delete');
  let id = selectedAlbum._id;
  console.log('this albums id', id)
  fetch(`/api/albums/${id}`, {
    method: 'DELETE'
  })
  .then(res => res.json())
  .then((data) => {
    // remove item from list
    const newAlbums = albums.filter((album) => {
      return album._id !== id;
    });
    // update state with new array
    setAlbums(newAlbums);
    setSelectedAlbum({});
  });
};
    
 
    return (
      <div>
      <Albums albums={albums} clickHandler={itemClicked} />
      <hr />
      <Details album={selectedAlbum} changeHandler={albumChanged} clearForm={clearForm} saveItem={saveItem} deleteItem={deleteItem} />
      </div>
    );
  }

  ReactDOM.render(<App />, document.getElementById('root'));
</script>


</body>
</html>